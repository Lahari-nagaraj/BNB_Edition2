<%- include('partials/header') %>
<div class="dashboard-container">
  <div class="dashboard-header">
    <h2>📝 Editor Dashboard</h2>
    <div class="user-info">
      <span class="user-name">Welcome, <%= session.userName %></span>
      <div class="user-stats">
        <span class="stat">Level <%= user.level %></span>
        <span class="stat">⭐ <%= user.points %> points</span>
        <span class="stat">🏆 <%= user.badges.length %> badges</span>
      </div>
    </div>
  </div>

  <!-- Quick Stats -->
  <div class="stats-grid">
    <div class="stat-card">
      <h3>📊 Assigned Budgets</h3>
      <p class="stat-number"><%= assignedBudgets.length %></p>
    </div>
    <div class="stat-card">
      <h3>📋 Pending Transactions</h3>
      <p class="stat-number"><%= pendingTransactions %></p>
    </div>
    <div class="stat-card">
      <h3>✅ Approved Today</h3>
      <p class="stat-number"><%= approvedToday %></p>
    </div>
    <div class="stat-card">
      <h3>📄 Receipts Uploaded</h3>
      <p class="stat-number"><%= user.receiptsUploaded %></p>
    </div>
  </div>

  <!-- Badges Section -->
  <% if (user.badges && user.badges.length > 0) { %>
  <div class="dashboard-section">
    <h3>🏆 Your Badges</h3>
    <div class="badges-grid">
      <% user.badges.forEach(badge => { %>
      <div class="badge-item">
        <div class="badge-icon"><%= badge.icon %></div>
        <div class="badge-info">
          <h4><%= badge.name %></h4>
          <p><%= badge.description %></p>
          <small>Earned: <%= new Date(badge.earnedAt).toLocaleDateString() %></small>
        </div>
      </div>
      <% }) %>
    </div>
  </div>
  <% } %>

  <!-- Assigned Budgets -->
  <div class="dashboard-section">
    <h3>📊 Your Assigned Budgets</h3>
    <div class="cards">
      <% assignedBudgets.forEach(budget => { %>
      <div class="card">
        <div class="card-header">
          <h4><%= budget.name %></h4>
          <span class="status-badge status-<%= budget.status %>"><%= budget.status %></span>
        </div>
        <p><strong>Department:</strong> <%= budget.department %></p>
        <p><strong>Total Budget:</strong> ₹<%= budget.totalBudget.toLocaleString() %></p>
        <p><strong>Remaining:</strong> ₹<%= budget.remaining.toLocaleString() %></p>
        <div class="progress-bar">
          <div class="progress-fill" style="width: <%= (budget.spent / budget.totalBudget * 100) %>%"></div>
        </div>
        <div class="card-actions">
          <a href="/editor/budget/<%= budget._id %>"><button>Manage Budget</button></a>
          <a href="/editor/budget/<%= budget._id %>/transactions"><button class="btn-secondary">View Transactions</button></a>
        </div>
      </div>
      <% }) %>
    </div>
  </div>

  <!-- Recent Transactions -->
  <div class="dashboard-section">
    <h3>📋 Recent Transactions</h3>
    <div class="transactions-list">
      <% recentTransactions.forEach(transaction => { %>
      <div class="transaction-item">
        <div class="transaction-info">
          <h4><%= transaction.description %></h4>
          <p>Amount: ₹<%= transaction.amount.toLocaleString() %></p>
          <p>Date: <%= new Date(transaction.createdAt).toLocaleDateString() %></p>
        </div>
        <div class="transaction-status">
          <span class="status-badge status-<%= transaction.status %>"><%= transaction.status %></span>
          <% if (transaction.receipt && transaction.receipt.url) { %>
          <span class="receipt-badge">📄 Receipt</span>
          <% } %>
        </div>
      </div>
      <% }) %>
    </div>
  </div>

  <!-- Quick Actions -->
  <div class="dashboard-section">
    <h3>⚡ Quick Actions</h3>
    <div class="quick-actions">
      <a href="/editor/transaction/new"><button class="btn-primary">➕ Add Transaction</button></a>
      <a href="/editor/receipts/upload"><button class="btn-secondary">📄 Upload Receipt</button></a>
      <a href="/editor/transactions/pending"><button class="btn-secondary">⏳ Pending Approvals</button></a>
    </div>
  </div>

  <!-- AI Assistant -->
  <div class="dashboard-section">
    <h3>🤖 AI Assistant</h3>
    <div class="ai-chat-container">
      <div id="ai-messages" class="ai-messages"></div>
      <div class="ai-input">
        <input type="text" id="ai-input" placeholder="Ask me about your budgets, transactions, or receipts...">
        <button id="ai-send">Send</button>
      </div>
    </div>
  </div>
</div>

<style>
.dashboard-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  padding: 2rem;
  background: var(--card-gradient);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-light);
}

.user-info {
  text-align: right;
}

.user-name {
  font-size: 1.2rem;
  font-weight: 600;
  color: #1e293b;
  display: block;
  margin-bottom: 0.5rem;
}

.user-stats {
  display: flex;
  gap: 1rem;
}

.user-stats .stat {
  background: rgba(37, 99, 235, 0.1);
  padding: 0.25rem 0.75rem;
  border-radius: 20px;
  font-size: 0.9rem;
  color: var(--primary-color);
  font-weight: 500;
}

.badges-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1rem;
}

.badge-item {
  display: flex;
  align-items: center;
  background: var(--card-gradient);
  padding: 1rem;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-light);
  border-left: 4px solid var(--accent-color);
}

.badge-icon {
  font-size: 2rem;
  margin-right: 1rem;
}

.badge-info h4 {
  margin: 0 0 0.25rem 0;
  color: #1e293b;
  font-family: 'Montserrat', sans-serif;
}

.badge-info p {
  margin: 0 0 0.25rem 0;
  color: #64748b;
  font-size: 0.9rem;
}

.badge-info small {
  color: #94a3b8;
  font-size: 0.8rem;
}

.transactions-list {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.transaction-item {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background: var(--card-gradient);
  padding: 1.5rem;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow-light);
}

.transaction-info h4 {
  margin: 0 0 0.5rem 0;
  color: #1e293b;
  font-family: 'Montserrat', sans-serif;
}

.transaction-info p {
  margin: 0.25rem 0;
  color: #64748b;
  font-size: 0.9rem;
}

.transaction-status {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  gap: 0.5rem;
}

.receipt-badge {
  background: rgba(16, 185, 129, 0.1);
  color: var(--success-color);
  padding: 0.25rem 0.5rem;
  border-radius: 12px;
  font-size: 0.8rem;
  font-weight: 500;
}

.ai-chat-container {
  background: var(--card-gradient);
  border-radius: var(--border-radius-lg);
  box-shadow: var(--shadow-light);
  overflow: hidden;
}

.ai-messages {
  height: 300px;
  overflow-y: auto;
  padding: 1rem;
  background: rgba(255, 255, 255, 0.5);
}

.ai-message {
  margin-bottom: 1rem;
  padding: 0.75rem 1rem;
  border-radius: var(--border-radius);
  max-width: 80%;
}

.ai-message.user {
  background: var(--primary-color);
  color: white;
  margin-left: auto;
}

.ai-message.bot {
  background: rgba(37, 99, 235, 0.1);
  color: #1e293b;
}

.ai-input {
  display: flex;
  padding: 1rem;
  background: white;
  border-top: 1px solid rgba(226, 232, 240, 0.5);
}

.ai-input input {
  flex: 1;
  padding: 0.75rem;
  border: 1px solid #e2e8f0;
  border-radius: var(--border-radius);
  margin-right: 0.5rem;
}

.ai-input button {
  padding: 0.75rem 1.5rem;
  white-space: nowrap;
}

.quick-actions {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.btn-primary {
  background: var(--primary-color);
  color: white;
}

.btn-secondary {
  background: #64748b;
  color: white;
}

@media (max-width: 768px) {
  .dashboard-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .user-stats {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .transaction-item {
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
  }
  
  .transaction-status {
    align-items: flex-start;
  }
  
  .quick-actions {
    flex-direction: column;
  }
}
</style>

<script>
// AI Chat functionality
document.addEventListener('DOMContentLoaded', function() {
  const messagesContainer = document.getElementById('ai-messages');
  const input = document.getElementById('ai-input');
  const sendButton = document.getElementById('ai-send');

  function addMessage(content, isUser = false) {
    const messageDiv = document.createElement('div');
    messageDiv.className = `ai-message ${isUser ? 'user' : 'bot'}`;
    messageDiv.textContent = content;
    messagesContainer.appendChild(messageDiv);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
  }

  async function sendMessage() {
    const message = input.value.trim();
    if (!message) return;

    addMessage(message, true);
    input.value = '';

    try {
      const response = await fetch('/api/chatbot', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          message: message,
          context: {
            userId: '<%= user._id %>',
            userRole: 'editor',
            assignedBudgets: '<%= assignedBudgets.map(b => b._id).join(",") %>'
          }
        })
      });

      const data = await response.json();
      addMessage(data.reply || data.response || 'No response received');
    } catch (error) {
      addMessage('Sorry, I encountered an error. Please try again.');
    }
  }

  sendButton.addEventListener('click', sendMessage);
  input.addEventListener('keypress', function(e) {
    if (e.key === 'Enter') {
      sendMessage();
    }
  });
});
</script>

<%- include('partials/footer') %>
